% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heatmaps.R
\name{tss_heatmap_matrix}
\alias{tss_heatmap_matrix}
\title{TSS Heatmap Count Matrix}
\usage{
tss_heatmap_matrix(
  experiment,
  samples = "all",
  upstream = 1000,
  downstream = 1000,
  threshold = NA,
  use_cpm = FALSE,
  dominant = FALSE,
  data_conditions = list(order_by = "score")
)
}
\arguments{
\item{experiment}{tsrexplorer object with annotated TSSs}

\item{samples}{Either 'all' or a vector of sample names to analyze}

\item{upstream}{Bases upstream of plot center}

\item{downstream}{Bases downstream of plot center}

\item{threshold}{Raw count threshold value}

\item{use_cpm}{Whether to use CPM-normalized counts}

\item{dominant}{Whether to only consider dominant TSSs}

\item{data_conditions}{Condition the data (filter, order, and quantile/group available)}
}
\value{
DataFrame of counts for each gene/transcript and position
}
\description{
Generate count matrix to make TSS heatmap.
}
\details{
This function makes a count matrix for each gene or transcript with detected features
  relative to the annotated TSS.
Whether genes or transripts are used depends on the feature type chosen
  when annotating the TSSs with the 'annotate_features' function.
The count matrix is used for plotting a heatmap using the 'plot_heatmap' function.

The region around the annotated TSS used for plotting is controlled by
  'upstream' and 'downstream', which should be positive integers.

A set of arguments to control data structure for plotting are included.
'use_cpm' will use the CPM normalized scores as opposed to raw read counts.
'threshold' will define the minimum number of reads a TSS or TSR
 must have to be considered.
'dominant' specifies whether only the dominant TSS or TSR is considered 
  from the 'mark_dominant' function.
For TSSs this can be either dominant per TSR or gene, and for TSRs
  it is just the dominant TSR per gene.
'data_conditions' allows for the advanced filtering, ordering, and grouping
  of data.
}
\examples{
TSSs <- system.file("extdata", "S288C_TSSs.RDS", package = "tsrexplorer")
TSSs <- readRDS(TSSs)
tsre_exp <- tsr_explorer(TSSs)
tsre_exp <- format_counts(tsre_exp, data_type = "tss")
annotation <- system.file("extdata", "S288C_Annotation.gtf", package = "tsrexplorer")
tsre_exp <- annotate_features(
  tsre_exp, annotation_data = annotation,
  data_type = "tss", feature_type = "transcript"
)
hm_mat <- tss_heatmap_matrix(tsre_exp)

}
\seealso{
\code{\link{annotate_features}} to annotate the TSSs or TSRs.
\code{\link{plot_heatmap}} to plot the heatmap.
\code{\link{tsr_heatmap_matrix}} to generate the TSR matrix data for plotting.
}
