% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/density_plots.R
\name{plot_density}
\alias{plot_density}
\title{Density Plots}
\usage{
plot_density(experiment, data_type = c("tss", "tsr"), samples = "all",
  consider_score = FALSE, upstream = 1000, downstream = 1000,
  threshold = 1, ncol = 1, use_cpm = FALSE, dominant = FALSE,
  data_conditions = NA, ...)
}
\arguments{
\item{experiment}{tsrexplorer object with annotated TSSs}

\item{data_type}{Whether to plot TSS or TSR density}

\item{samples}{Either 'all' to plot all samples or a vector of sample names}

\item{consider_score}{Whether the score of each TSS or TSR score be considered
in addition to its unique location.}

\item{upstream}{Bases upstream of plot center}

\item{downstream}{Bases downstream of plot center}

\item{threshold}{Raw count threshold value for TSSs}

\item{ncol}{Number of columns to use for plotting data when quantiles not set}

\item{use_cpm}{Whether to use CPM normalized or raw counts if score is considered}

\item{dominant}{Consider only dominant TSS or TSR}

\item{data_conditions}{Data conditioning filters}

\item{...}{Arguments passed to geom_density}
}
\value{
ggplot2 object of density plot
}
\description{
Generate density plots of TSSs or TSRs
}
\details{
This plotting function generates a density plot of TSS or TSR signal
  relative to annotated TSSs.
The plot is returned as a ggplot2 object.

By default only the TSS or TSR position is considered, effectively giving every
  TSS or TSR a score of 1.
If 'consider_score' is set to TRUE, the score of each TSS or TSR will be considered when
  making the plot, giving more weight to stronger TSSs or TSRs.

The region around the annotated TSS used for plotting is controlled by
  'upstream' and 'downstream', which should be positive integers.

A set of functions to control data structure for plotting are included.
'use_cpm' will use the CPM normalized scores, which only matters if
  'consider_score' is TRUE.
'threshold' defines the minimum number of raw counts a TSS or TSR
 must have to be considered.
'dominant' specifies whether only the dominant TSS or TSR is considered 
  from the 'mark_dominant' function.
For TSSs this can be either dominant TSS per TSR or gene, and for TSRs
  it is the dominant TSR per gene.
'data_conditions' allows for the advanced filtering, ordering, and grouping
  of data.
}
\examples{
TSSs <- system.file("extdata", "S288C_TSSs.RDS", package = "tsrexplorer")
TSSs <- readRDS(TSSs)
tsre_exp <- tsr_explorer(TSSs)
tsre_exp <- format_counts(tsre_exp, data_type = "tss")
annotation <- system.file("extdata", "S288C_Annotation.gtf", package = "tsrexplorer")
tsre_exp <- annotate_features(
  tsre_exp, annotation_data = annotation,
  data_type = "tss", feature_type = "transcript"
)
plot_average(tsre_exp, data_type = "tss")

}
\seealso{
\code{\link{annotate_features}} to annotate the TSSs or TSRs.
  \code{\link{mark_dominant}} to identify dominant TSSs or TSRs.
}
